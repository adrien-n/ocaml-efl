# OASIS_START
# DO NOT EDIT (digest: 05491ead34cb9dbe2669a4aaef1d8827)
# Ignore VCS directories, you can use the same kind of rule outside 
# OASIS_START/STOP if you want to exclude directories that contains 
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library efl
"src/efl.cmxs": use_efl
"src/ecore.cmx": for-pack(Efl)
"src/ecore_timer.cmx": for-pack(Efl)
"src/evas.cmx": for-pack(Efl)
"src/evas_object.cmx": for-pack(Efl)
"src/evas_object_smart.cmx": for-pack(Efl)
"src/ethumb.cmx": for-pack(Efl)
"src/edje.cmx": for-pack(Efl)
"src/elm.cmx": for-pack(Efl)
"src/elm_object.cmx": for-pack(Efl)
"src/elm_layout.cmx": for-pack(Efl)
"src/elm_scroller.cmx": for-pack(Efl)
"src/elm_win.cmx": for-pack(Efl)
"src/elm_bg.cmx": for-pack(Efl)
"src/elm_label.cmx": for-pack(Efl)
"src/elm_box.cmx": for-pack(Efl)
"src/elm_button.cmx": for-pack(Efl)
"src/elm_frame.cmx": for-pack(Efl)
"src/elm_icon.cmx": for-pack(Efl)
"src/elm_entry.cmx": for-pack(Efl)
"src/elm_gen.cmx": for-pack(Efl)
"src/elm_gengrid.cmx": for-pack(Efl)
"src/elm_check.cmx": for-pack(Efl)
"src/elm_inwin.cmx": for-pack(Efl)
"src/elm_win_inwin.cmx": for-pack(Efl)
"src/elm_naviframe.cmx": for-pack(Efl)
"src/elm_theme.cmx": for-pack(Efl)
"src/elm_radio.cmx": for-pack(Efl)
"src/elm_app.cmx": for-pack(Efl)
"src/elm_image.cmx": for-pack(Efl)
"src/elm_separator.cmx": for-pack(Efl)
"src/elm_notify.cmx": for-pack(Efl)
"src/elm_spinner.cmx": for-pack(Efl)
"src/elm_clock.cmx": for-pack(Efl)
"src/elm_hover.cmx": for-pack(Efl)
"src/elm_fileselector.cmx": for-pack(Efl)
"src/elm_list.cmx": for-pack(Efl)
"src/elm_menu.cmx": for-pack(Efl)
"src/elm_progressbar.cmx": for-pack(Efl)
"src/elm_genlist.cmx": for-pack(Efl)
"src/elm_grid.cmx": for-pack(Efl)
"src/elm_actionslider.cmx": for-pack(Efl)
"src/elm_config.cmx": for-pack(Efl)
"src/elm_font.cmx": for-pack(Efl)
"src/elm_bubble.cmx": for-pack(Efl)
"src/elm_slider.cmx": for-pack(Efl)
"src/elm_toolbar.cmx": for-pack(Efl)
"src/elm_conformant.cmx": for-pack(Efl)
"src/elm_gesture_layer.cmx": for-pack(Efl)
"src/elm_panes.cmx": for-pack(Efl)
"src/elm_transit.cmx": for-pack(Efl)
"src/elm_table.cmx": for-pack(Efl)
"src/elm_fileselector_button.cmx": for-pack(Efl)
"src/elm_fileselector_entry.cmx": for-pack(Efl)
"src/elm_hoversel.cmx": for-pack(Efl)
"src/elm_popup.cmx": for-pack(Efl)
"src/elm_sig.cmx": for-pack(Efl)
"src/elm_ctxpopup.cmx": for-pack(Efl)
"src/elm_flip.cmx": for-pack(Efl)
"src/elm_flipselector.cmx": for-pack(Efl)
"src/elm_panel.cmx": for-pack(Efl)
"src/elm_map.cmx": for-pack(Efl)
"src/elm_thumb.cmx": for-pack(Efl)
"src/elm_diskselector.cmx": for-pack(Efl)
"src/elm_web.cmx": for-pack(Efl)
"src/elm_index.cmx": for-pack(Efl)
"src/elm_mapbuf.cmx": for-pack(Efl)
"src/elm_photo.cmx": for-pack(Efl)
"src/elm_route.cmx": for-pack(Efl)
"src/elm_segment_control.cmx": for-pack(Efl)
"src/elm_slideshow.cmx": for-pack(Efl)
"src/elm_photocam.cmx": for-pack(Efl)
"src/elm_video.cmx": for-pack(Efl)
"src/elm_calendar.cmx": for-pack(Efl)
"src/elm_colorselector.cmx": for-pack(Efl)
"src/elm_datetime.cmx": for-pack(Efl)
<src/efl.{cma,cmxa}>: oasis_library_efl_cclib
"src/libefl_stubs.lib": oasis_library_efl_cclib
"src/dllefl_stubs.dll": oasis_library_efl_cclib
"src/libefl_stubs.a": oasis_library_efl_cclib
"src/dllefl_stubs.so": oasis_library_efl_cclib
<src/efl.{cma,cmxa}>: use_libefl_stubs
# Executable test
<examples/test.{native,byte}>: use_efl
# Executable test2
"examples/test2.byte": use_efl
# Executable test3
"examples/test3.byte": use_efl
# Executable button_example_00
"examples/button_example_00.byte": use_efl
# Executable button_example_01
"examples/button_example_01.byte": use_efl
# Executable label_example_01
"examples/label_example_01.byte": use_efl
# Executable entry_example
"examples/entry_example.byte": use_efl
# Executable radio_example_01
"examples/radio_example_01.byte": use_efl
# Executable check_example_01
"examples/check_example_01.byte": use_efl
# Executable box_example_02
"examples/box_example_02.byte": use_efl
# Executable win_example
"examples/win_example.byte": use_efl
# Executable image_example_01
"examples/image_example_01.byte": use_efl
# Executable icon_example_01
"examples/icon_example_01.byte": use_efl
# Executable bg_example_01
"examples/bg_example_01.byte": use_efl
# Executable bg_example_02
"examples/bg_example_02.byte": use_efl
# Executable bg_example_03
"examples/bg_example_03.byte": use_efl
# Executable notify_example_01
"examples/notify_example_01.byte": use_efl
# Executable separaor_example_01
"examples/separator_example_01.byte": use_efl
# Executable layout_example_01
"examples/layout_example_01.byte": use_efl
# Executable layout_example_02
"examples/layout_example_02.byte": use_efl
# Executable layout_example_03
"examples/layout_example_03.byte": use_efl
# Executable inwin_example
"examples/inwin_example.byte": use_efl
# Executable fileselector_example
"examples/fileselector_example.byte": use_efl
# Executable list_example_01
"examples/list_example_01.byte": use_efl
# Executable list_example_02
"examples/list_example_02.byte": use_efl
# Executable list_example_03
"examples/list_example_03.byte": use_efl
# Executable menu_example_01
"examples/menu_example_01.byte": use_efl
# Executable progressbar_example
"examples/progressbar_example.byte": use_efl
"examples/progressbar_example.byte": pkg_threads
# Executable test_efl_ocaml_threads
"examples/test_efl_ocaml_threads.byte": use_efl
"examples/test_efl_ocaml_threads.byte": pkg_threads
# Executable test_efl_ocaml_threads2
"examples/test_efl_ocaml_threads2.byte": use_efl
"examples/test_efl_ocaml_threads2.byte": pkg_threads
<examples/*.ml{,i}>: pkg_threads
# Executable genlist_example_01
"examples/genlist_example_01.byte": use_efl
# Executable genlist_example_02
"examples/genlist_example_02.byte": use_efl
"examples/genlist_example_02.byte": pkg_unix
# Executable genlist_example_03
"examples/genlist_example_03.byte": use_efl
"examples/genlist_example_03.byte": pkg_unix
# Executable scroller_example_01
"examples/scroller_example_01.byte": use_efl
# Executable genlist_example_04
"examples/genlist_example_04.byte": use_efl
"examples/genlist_example_04.byte": pkg_unix
<examples/*.ml{,i}>: pkg_unix
# Executable genlist_example_05
"examples/genlist_example_05.byte": use_efl
# Executable actionslider_example_01
"examples/actionslider_example_01.byte": use_efl
# Executable bubble_example_01
"examples/bubble_example_01.byte": use_efl
# Executable frame_example_01
"examples/frame_example_01.byte": use_efl
# Executable slider_example
"examples/slider_example.byte": use_efl
# Executable toolbar_example_01
"examples/toolbar_example_01.byte": use_efl
# Executable toolbar_example_02
"examples/toolbar_example_02.byte": use_efl
# Executable toolbar_example_03
"examples/toolbar_example_03.byte": use_efl
# Executable panes_example
"examples/panes_example.byte": use_efl
# Executable table_example_01
"examples/table_example_01.byte": use_efl
# Executable table_example_02
"examples/table_example_02.byte": use_efl
# Executable fileselector_button_example
"examples/fileselector_button_example.byte": use_efl
# Executable fileselector_entry_example
"examples/fileselector_entry_example.byte": use_efl
# Executable hoversel_example_01
"examples/hoversel_example_01.byte": use_efl
# Executable hover_example_01
"examples/hover_example_01.byte": use_efl
# Executable spinner_example
"examples/spinner_example.byte": use_efl
# Executable popup_example_01
"examples/popup_example_01.byte": use_efl
# Executable popup_example_02
"examples/popup_example_02.byte": use_efl
# Executable popup_example_03
"examples/popup_example_03.byte": use_efl
# Executable ctxpopup_example_01
"examples/ctxpopup_example_01.byte": use_efl
# Executable flip_example_01
"examples/flip_example_01.byte": use_efl
# Executable flipselector_example_01
"examples/flipselector_example_01.byte": use_efl
# Executable panel_example_01
"examples/panel_example_01.byte": use_efl
# Executable thumb_example_01
"examples/thumb_example_01.byte": use_efl
# Executable map_example_01
"examples/map_example_01.byte": use_efl
# Executable diskselector_example_01
"examples/diskselector_example_01.byte": use_efl
# Executable web_example_01
"examples/web_example_01.byte": use_efl
# Executable mapbuf_example
"examples/mapbuf_example.byte": use_efl
# Executable segment_control_example
"examples/segment_control_example.byte": use_efl
# Executable photocam_example_01
"examples/photocam_example_01.byte": use_efl
# Executable calendar_example_01
"examples/calendar_example_01.byte": use_efl
# Executable colorselector_example_01
"examples/colorselector_example_01.byte": use_efl
# Executable clock_example
"examples/clock_example.byte": use_efl
<examples/*.ml{,i}>: use_efl
# OASIS_STOP
<src/eina_*>: efl
<src/evas_*>: efl
<src/edje_*>: efl
<src/elm_*>: efl
#<efl.{cma,cmxa}>: oasis_library_efl_cclib
#"libefl_stubs.lib": oasis_library_efl_cclib
#"dllefl_stubs.dll": oasis_library_efl_cclib
#"libefl_stubs.a": oasis_library_efl_cclib
#"dllefl_stubs.so": oasis_library_efl_cclib
